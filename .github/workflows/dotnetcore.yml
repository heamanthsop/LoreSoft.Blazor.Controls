name: .NET Core

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Install GitVersion
      run: dotnet tool install --global GitVersion.Tool

    - name: Determine Version
      run: dotnet gitversion /output buildserver /updateprojectfiles

    - name: Build Reason
      run: "echo ref: ${{github.ref}} event: ${{github.event_name}}"

    - name: Build Solution
      run: dotnet build --configuration Release

    - name: Package Nuget
      if: success() && github.event_name != 'pull_request'
      run: dotnet pack --configuration Release --include-symbols --include-source --no-restore

    - name: Publish Samples
      if: success() && github.event_name != 'pull_request'
      run: dotnet publish --configuration Release --output publish

    - name: Upload Artifacts
      if: success() && github.event_name != 'pull_request'
      uses: actions/upload-artifact@v1.0.0
      with:
        name: artifacts
        path: artifacts

    - name: Publish CI Packages
      if: success() && github.event_name != 'pull_request'
      run: |
        dotnet nuget add source --username pwelter34 --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/loresoft/index.json"
        for package in $(find -name "*.nupkg"); do
          echo "${0##*/}": Pushing $package...
          dotnet nuget push $package --source https://www.myget.org/F/loresoft/api/v3/index.json --api-key ${{ secrets.MYGET_KEY }} --skip-duplicate
          dotnet nuget push $package --source "github" --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
        done

    - name: Publish Release Packages
      if: success() && startsWith(github.ref, 'refs/tags/v')
      run: |
        for package in $(find -name "*.nupkg"); do
          echo "${0##*/}": Pushing $package...
          dotnet nuget push $package --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_KEY }} --skip-duplicate
        done

    - name: Deploy Sample Website
      if: success() && github.ref == 'refs/heads/master'
      uses: crazy-max/ghaction-github-pages@v2
      with:
        target_branch: gh-pages
        build_dir: publish/wwwroot
        fqdn: blazor.loresoft.com
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_PAT: ${{ secrets.COMMITTOKEN }}
