@using Sample.Core.Services
@using Sample.Core.Models
<h3>Basic</h3>

<button class="btn btn-secondary" @onclick="@(() => DataGrid.SortByAsync("Id"))">Sort By Id</button>
<button class="btn btn-secondary" @onclick="@(() => DataGrid.Pager.Page = 5)">Go to page 5</button>
<button class="btn btn-secondary" @onclick="@(() => DataGrid.Pager.PageSize = 25)">Page Size 25</button>
<button class="btn btn-secondary" @onclick="ApplyFilter">Filter High Score</button>

<DataGrid Data="People"
          TItem="Person"
          Filterable="true"
          Selectable="true"
          RowDoubleClick="HandleRowClick"
          @bind-SelectedItems="Selected"
          @ref="DataGrid"
          class="table table-hover">
    <DataToolbar>
        <DataGridToolbar Title="Sample Grid" />
    </DataToolbar>
    <DataColumns>
        <DataColumn TItem="Person" Property="p => p.Id" Width="90px" Hidable="false">
            <Template Context="item">
                <a href="#" class="d-block" title="@item.FullName">@item.Id</a>
            </Template>
        </DataColumn>
        <DataColumn TItem="Person" Property="p => p.FirstName" SortIndex="1" ColumnStyle="min-width: 200px" />
        <DataColumn TItem="Person" Property="p => p.LastName" SortIndex="0" ColumnStyle="min-width: 200px" />
        <DataColumn TItem="Person" Property="p => p.Score" Width="120px" Style="@SoreStyle" />
        <DataColumn TItem="Person" Property="p => p.Location" ColumnStyle="min-width: 200px" Sortable="false" FilterValues="Locations" />
        <DataColumn TItem="Person" Property="p => p.Birthday" Width="110px" Format="d" />
        <DataColumn TItem="Person" Property="p => p.FullName" Visible="false" />
    </DataColumns>
    <DataPagination Context="grid">
        <DataPager PageSize="10" />
        <DataSizer />
        <div>@grid.Pager.StartItem - @grid.Pager.EndItem of @grid.Pager.Total</div>
    </DataPagination>
</DataGrid>

<div class="mt-5">
    <h4>Selected</h4>
    <ul>
        @foreach (var person in Selected)
        {
            <li>@person.FullName</li>
        }
    </ul>
</div>

@code {
    public ICollection<Person> People { get; set; }

    public IEnumerable<Person> Selected { get; set; } = new List<Person>();

    private DataGrid<Person> DataGrid { get; set; }

    protected DebounceValue<string> SearchText { get; set; }

    protected List<string> Locations { get; set; } = ["North", "South", "East", "West"];

    protected override void OnInitialized()
    {
        SearchText = new DebounceValue<string>((value) => InvokeAsync(() => DataGrid.QuickSearch(value)));
        People = Data.GeneratePeople(200).ToList();
    }


    protected string SoreStyle(Person person)
    {
        if (person.Score > 75)
            return "background-color: #dc3545";
        if (person.Score > 50)
            return "background-color: #ffc107";

        return null;
    }

    private async Task ApplyFilter()
    {
        var filters = new List<QueryRule>
        {
            new QueryFilter { Field = nameof(Person.Score), Operator = QueryOperators.GreaterThan, Value = 50 },
            new QueryFilter { Field = nameof(Person.Birthday), Operator = QueryOperators.GreaterThan, Value = new DateTime(2000, 1, 1) }
        };

        await DataGrid.ApplyFilters(filters, true);
    }

    private void HandleRowClick(Person person)
    {
        Console.WriteLine("Row Click: {0}", person.FullName);
    }
}
