@using Sample.Core.Services
@using Sample.Core.Models

@inject RandomDataClient RandomDataClient;

<h3>Banks</h3>

<DataGrid Data="Data" class="table table-hover" @ref="DataGrid" RowAttributes="RowAttributes">
    <DataColumns>
        <DataColumn TItem="Bank" Property="p => p.Id" Width="70px" data-test="testing" CellAttributes="CellAttributes" />
        <DataColumn TItem="Bank" Property="p => p.AccountNumber" Width="150px" Title="Account" SortIndex="0" />
        <DataColumn TItem="Bank" Property="p => p.IBAN" Width="200px" />
        <DataColumn TItem="Bank" Property="p => p.BankName" />
        <DataColumn TItem="Bank" Property="p => p.RoutingNumber" Width="200px" />
        <DataColumn TItem="Bank" Property="p => p.SwiftBIC" Width="200px" />
    </DataColumns>
    <DataPagination Context="grid">
        <DataPager PageSize="10" />
        <DataSizer />
        <div>@grid.Pager.StartItem - @grid.Pager.EndItem of @grid.Pager.Total</div>
    </DataPagination>
</DataGrid>


@code {
    public ICollection<Bank> Data { get; set; } = new List<Bank>();

    private DataGrid<Bank> DataGrid { get; set; }

    protected async override Task OnInitializedAsync()
    {
        Data = await RandomDataClient.GetBanks();
    }

    private Dictionary<string, object> CellAttributes(Bank bank)
    {
        return new Dictionary<string, object>
        {
            { "data-key-" + bank.Id, "Test " + bank.BankName }
        };
    }

    private Dictionary<string, object> RowAttributes(Bank bank)
    {
        return new Dictionary<string, object>
        {
            { "data-row-" + bank.Id, "Test " + bank.BankName }
        };
    }
}
